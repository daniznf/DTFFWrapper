/*
    This file is part of DTFFWrapper.

    DTFFWrapper - Daniele's Tools Wrapper for FFmpeg
    Copyright (C) 2022 daniznf

    DTFFWrapper is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    DTFFWrapper is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <https://www.gnu.org/licenses/>.
    
    https://github.com/daniznf/DTFFWrapper
 */

using DTFFWrapper;

namespace xTest
{
    internal class AutoGeneratedMediaFile : MediaFile
    {
        // Creates a MediaFile that can generate a test stream.
        public AutoGeneratedMediaFile(string filePath) : base(filePath)
        { }

        public void GenerateInfo()
        {
            Stream s = new MemoryStream();
            StreamReader sr = new(s);
            StreamWriter sw = new(s);

            // An output of an ffprobe run.
            sw.WriteLine("[STREAM]");
            sw.WriteLine("index=0");
            sw.WriteLine("codec_name=vCodec");
            sw.WriteLine("codec_long_name=Long name of video codec");
            sw.WriteLine("profile=High");
            sw.WriteLine("codec_type=video");
            sw.WriteLine("codec_tag_string=vTag");
            sw.WriteLine("codec_tag=0x1234567a");
            sw.WriteLine("width=1920");
            sw.WriteLine("height=1080");
            sw.WriteLine("coded_width=1920");
            sw.WriteLine("coded_height=1080");
            sw.WriteLine("closed_captions=0");
            sw.WriteLine("film_grain=0");
            sw.WriteLine("has_b_frames=1");
            sw.WriteLine("sample_aspect_ratio=1:1");
            sw.WriteLine("display_aspect_ratio=16:9");
            sw.WriteLine("pix_fmt=yuv420p");
            sw.WriteLine("level=40");
            sw.WriteLine("color_range=tv");
            sw.WriteLine("color_space=bt709");
            sw.WriteLine("color_transfer=bt709");
            sw.WriteLine("color_primaries=bt709");
            sw.WriteLine("chroma_location=left");
            sw.WriteLine("field_order=progressive");
            sw.WriteLine("refs=1");
            sw.WriteLine("is_avc=true");
            sw.WriteLine("nal_length_size=4");
            sw.WriteLine("id=0x1");
            sw.WriteLine("r_frame_rate=30/1");
            sw.WriteLine("avg_frame_rate=170190000/5669999");
            sw.WriteLine("time_base=1/90000");
            sw.WriteLine("start_pts=0");
            sw.WriteLine("start_time=0.000000");
            sw.WriteLine("duration_ts=5669999");
            sw.WriteLine("duration=62.999989");
            sw.WriteLine("bit_rate=281849");
            sw.WriteLine("max_bit_rate=N/A");
            sw.WriteLine("bits_per_raw_sample=8");
            sw.WriteLine("nb_frames=1891");
            sw.WriteLine("nb_read_frames=N/A");
            sw.WriteLine("nb_read_packets=N/A");
            sw.WriteLine("extradata_size=45");
            sw.WriteLine("DISPOSITION:default=1");
            sw.WriteLine("DISPOSITION:dub=0");
            sw.WriteLine("DISPOSITION:original=0");
            sw.WriteLine("DISPOSITION:comment=0");
            sw.WriteLine("DISPOSITION:lyrics=0");
            sw.WriteLine("DISPOSITION:karaoke=0");
            sw.WriteLine("DISPOSITION:forced=0");
            sw.WriteLine("DISPOSITION:hearing_impaired=0");
            sw.WriteLine("DISPOSITION:visual_impaired=0");
            sw.WriteLine("DISPOSITION:clean_effects=0");
            sw.WriteLine("DISPOSITION:attached_pic=0");
            sw.WriteLine("DISPOSITION:timed_thumbnails=0");
            sw.WriteLine("DISPOSITION:captions=0");
            sw.WriteLine("DISPOSITION:descriptions=0");
            sw.WriteLine("DISPOSITION:metadata=0");
            sw.WriteLine("DISPOSITION:dependent=0");
            sw.WriteLine("DISPOSITION:still_image=0");
            sw.WriteLine("TAG:language=und");
            sw.WriteLine("TAG:handler_name=VideoHandler");
            sw.WriteLine("TAG:vendor_id=[0][0][0][0]");
            sw.WriteLine("[/STREAM]");
            sw.WriteLine("[STREAM]");
            sw.WriteLine("index=1");
            sw.WriteLine("codec_name=aCodec");
            sw.WriteLine("codec_long_name=Long name of audio codec");
            sw.WriteLine("profile=LC");
            sw.WriteLine("codec_type=audio");
            sw.WriteLine("codec_tag_string=aTag");
            sw.WriteLine("codec_tag=0x1234567b");
            sw.WriteLine("sample_fmt=fltp");
            sw.WriteLine("sample_rate=44100");
            sw.WriteLine("channels=2");
            sw.WriteLine("channel_layout=stereo");
            sw.WriteLine("bits_per_sample=0");
            sw.WriteLine("id=0x2");
            sw.WriteLine("r_frame_rate=0/0");
            sw.WriteLine("avg_frame_rate=0/0");
            sw.WriteLine("time_base=1/44100");
            sw.WriteLine("start_pts=0");
            sw.WriteLine("start_time=0.000000");
            sw.WriteLine("duration_ts=2782208");
            sw.WriteLine("duration=63.088617");
            sw.WriteLine("bit_rate=125588");
            sw.WriteLine("max_bit_rate=N/A");
            sw.WriteLine("bits_per_raw_sample=N/A");
            sw.WriteLine("nb_frames=2717");
            sw.WriteLine("nb_read_frames=N/A");
            sw.WriteLine("nb_read_packets=N/A");
            sw.WriteLine("extradata_size=2");
            sw.WriteLine("DISPOSITION:default=1");
            sw.WriteLine("[/STREAM]");

            sw.Flush();
            s.Position = 0;
            ParseInfo(sr);
            SelectedStreamIndex = 0;
        }
    }
}
